import requests
from requests.auth import HTTPDigestAuth
import json
import settings
import re

search_url = settings.AZURE_ENDPOINT
subscription_key = settings.AZURE_SUBSCRIPTION_KEY
search_term = settings.SEARCH_TERM
cvePattern = re.compile(r"(CVE-\d+-\d+)", re.IGNORECASE)

headers = {"Ocp-Apim-Subscription-Key": subscription_key}
params = {"q": search_term,
  "mkt": "en-US",
  "category": "ScienceAndTechnology",
  "count": 100,
  "offset": 0,
  "freshness": "Week"}
response = requests.get(search_url, headers=headers, params=params)
response.raise_for_status()
search_results = response.json()

news = json.loads(response.content)
#print(json.dumps(news, indent=4, sort_keys=True))

for item in news["value"]:
  result = cvePattern.findall(item["description"])
  if result:
    print ("CVEs: ")
    for cve in result:
      print (cve + ",")
    print ("\n")
    print (item["name"] + "\n")
    print (item["datePublished"] + "\n")
    print (item["description"] + "\n")
    print (item["provider"][0]["name"] + "\n")
    print (item["url"] + "\n")



    # # Loading the response data into a dict variable
    # # json.loads takes in only binary or string variables so using content to fetch binary content
    # # Loads (Load String) takes a Json file and converts into python data structure (dict or list, depending on JSON)
    # jData = json.loads(myResponse.content)

    # print("The response contains {0} properties".format(len(jData)))
    # print("\n")
    # for key in jData:
    #     print key + " : " + jData[key]
